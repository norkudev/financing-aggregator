/*
 * SolidBank financing application API
 * SoldBank API financing application and offer retrieval API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package lv.norkudev.financingaggregator.banks.solid;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * ApplicationRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-10T18:49:12.597548900+02:00[Europe/Riga]")

public class ApplicationRequest {
  @SerializedName("phone")
  private String phone = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("monthlyIncome")
  private BigDecimal monthlyIncome = null;

  @SerializedName("monthlyExpenses")
  private BigDecimal monthlyExpenses = null;

  /**
   * Gets or Sets maritalStatus
   */
  @JsonAdapter(MaritalStatusEnum.Adapter.class)
  public enum MaritalStatusEnum {
    @SerializedName("SINGLE")
    SINGLE("SINGLE"),
    @SerializedName("MARRIED")
    MARRIED("MARRIED"),
    @SerializedName("DIVORCED")
    DIVORCED("DIVORCED"),
    @SerializedName("COHABITING")
    COHABITING("COHABITING");

    private String value;

    MaritalStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MaritalStatusEnum fromValue(String input) {
      for (MaritalStatusEnum b : MaritalStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MaritalStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MaritalStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MaritalStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return MaritalStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("maritalStatus")
  private MaritalStatusEnum maritalStatus = null;

  @SerializedName("agreeToBeScored")
  private Boolean agreeToBeScored = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  public ApplicationRequest phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(required = true, description = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public ApplicationRequest email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(required = true, description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ApplicationRequest monthlyIncome(BigDecimal monthlyIncome) {
    this.monthlyIncome = monthlyIncome;
    return this;
  }

   /**
   * Get monthlyIncome
   * @return monthlyIncome
  **/
  @Schema(required = true, description = "")
  public BigDecimal getMonthlyIncome() {
    return monthlyIncome;
  }

  public void setMonthlyIncome(BigDecimal monthlyIncome) {
    this.monthlyIncome = monthlyIncome;
  }

  public ApplicationRequest monthlyExpenses(BigDecimal monthlyExpenses) {
    this.monthlyExpenses = monthlyExpenses;
    return this;
  }

   /**
   * Get monthlyExpenses
   * @return monthlyExpenses
  **/
  @Schema(required = true, description = "")
  public BigDecimal getMonthlyExpenses() {
    return monthlyExpenses;
  }

  public void setMonthlyExpenses(BigDecimal monthlyExpenses) {
    this.monthlyExpenses = monthlyExpenses;
  }

  public ApplicationRequest maritalStatus(MaritalStatusEnum maritalStatus) {
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Get maritalStatus
   * @return maritalStatus
  **/
  @Schema(required = true, description = "")
  public MaritalStatusEnum getMaritalStatus() {
    return maritalStatus;
  }

  public void setMaritalStatus(MaritalStatusEnum maritalStatus) {
    this.maritalStatus = maritalStatus;
  }

  public ApplicationRequest agreeToBeScored(Boolean agreeToBeScored) {
    this.agreeToBeScored = agreeToBeScored;
    return this;
  }

   /**
   * Get agreeToBeScored
   * @return agreeToBeScored
  **/
  @Schema(required = true, description = "")
  public Boolean isAgreeToBeScored() {
    return agreeToBeScored;
  }

  public void setAgreeToBeScored(Boolean agreeToBeScored) {
    this.agreeToBeScored = agreeToBeScored;
  }

  public ApplicationRequest amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(required = true, description = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationRequest applicationRequest = (ApplicationRequest) o;
    return Objects.equals(this.phone, applicationRequest.phone) &&
        Objects.equals(this.email, applicationRequest.email) &&
        Objects.equals(this.monthlyIncome, applicationRequest.monthlyIncome) &&
        Objects.equals(this.monthlyExpenses, applicationRequest.monthlyExpenses) &&
        Objects.equals(this.maritalStatus, applicationRequest.maritalStatus) &&
        Objects.equals(this.agreeToBeScored, applicationRequest.agreeToBeScored) &&
        Objects.equals(this.amount, applicationRequest.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phone, email, monthlyIncome, monthlyExpenses, maritalStatus, agreeToBeScored, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationRequest {\n");
    
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    monthlyIncome: ").append(toIndentedString(monthlyIncome)).append("\n");
    sb.append("    monthlyExpenses: ").append(toIndentedString(monthlyExpenses)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    agreeToBeScored: ").append(toIndentedString(agreeToBeScored)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
